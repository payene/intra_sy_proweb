<?php

namespace Loonins\GrhBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * GrhContratsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GrhContratsRepository extends EntityRepository {

// Depuis un repository
    function __construct() {
        
    }

    public function getContrats($nombreParPage, $page) {
        if ($page < 1) {
            throw new \InvalidArgumentException('L\'argument $page ne peut être inférieur à 1 (valeur : "' . $page . '").');
        }
        $query = $this->createQueryBuilder('c')
                ->from($this->_entityName, 'c')
                ->getQuery();
        $query->setFirstResult(($page - 1) * $nombreParPage)
                ->setMaxResults($nombreParPage);
        return new Paginator($query);
    }

    public function findByThreeMonthsRest($qb) {
// On utilise le QueryBuilder créé par le repository directement    pour gagner du temps
// Plus besoin de faire le select() ni le from() par la suite    donc
        $currentMonth = date('m');
        $qb->select("c");
        $qb->from('LooninsGrhBundle:GrhContrats', 'c');

        $qb->where("c.date BETWEEN :debut AND :fin");
        $qb->setParameter('debut', new \Datetime(date('Y') . '-' . $currentMonth . '-01'));
        $qb->setParameter('fin', new \Datetime(date('Y') . '-' . $currentMonth . '-31'));
        $qb = $this->whereStatusEnCours($qb);
        $qb->orderBy('c.date', 'DESC');

//        var_dump($qb->getQuery()->getResult());
    }

    public function whereStatusEnCours(\Doctrine\ORM\QueryBuilder $qb, $status = 1) {
        $qb->andWhere('c.status = :status')
                ->setParameter('status', $status)
                ->setParameter('fin', new \Datetime(date('Y') . '-12-31'));
        return $qb;
    }

    public function whereStatusRompu(\Doctrine\ORM\QueryBuilder $qb, $status = 3) {
        $qb->andWhere('c.status = :status')
                ->setParameter('status', $status)
                ->setParameter('fin', new \Datetime(date('Y') . '-12-31'));
        return $qb;
    }

    public function whereStatusDispo(\Doctrine\ORM\QueryBuilder $qb, $status = 2) {
        $qb->andWhere('c.status = :status')
                ->setParameter('status', $status)
                ->setParameter('fin', new \Datetime(date('Y') . '-12-31'));
        return $qb;
    }

    public function whereStatusATerme(\Doctrine\ORM\QueryBuilder $qb, $status = 4) {
        $qb->andWhere('c.status = :status')
                ->setParameter('status', $status)
                ->setParameter('fin', new \Datetime(date('Y') . '-12-31'));
        return $qb;
    }

}
